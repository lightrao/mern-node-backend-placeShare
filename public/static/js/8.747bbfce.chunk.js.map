{"version":3,"sources":["places/pages/NewPlace.js"],"names":["i","NewPlace","auth","useContext","AuthContext","useHttpClient","isLoading","error","sendRequest","clearError","useForm","title","value","isValid","description","address","image","formState","inputHandler","history","useHistory","placeSubmitHandler","event","preventDefault","formData","FormData","append","inputs","process","Authorization","token","push","console","log","onClear","className","onSubmit","asOverlay","id","element","type","label","validators","VALIDATOR_REQUIRE","errorText","onInput","VALIDATOR_MINLENGTH","disabled"],"mappings":"sQACA,kmGAAAA,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,sQAkGeC,UAlFE,WACf,IAAMC,EAAOC,qBAAWC,KACxB,EAAsDC,cAA9CC,EAAS,EAATA,UAAWC,EAAK,EAALA,MAAOC,EAAW,EAAXA,YAAaC,EAAU,EAAVA,WACvC,EAAkCC,YAChC,CACEC,MAAO,CAAEC,MAAO,GAAIC,QAAS,IAC7BC,YAAa,CAAEF,MAAO,GAAIC,QAAS,IACnCE,QAAS,CAAEH,MAAO,GAAIC,QAAS,IAC/BG,MAAO,CAAEJ,MAAO,KAAMC,SAAS,KAEjC,GACD,mBARMI,EAAS,KAAEC,EAAY,KAUxBC,EAAUC,cAEVC,EAAkB,uCAAG,WAAOC,GAAK,uEAOoB,OANzDA,EAAMC,iBAAiB,UAEfC,EAAW,IAAIC,UACZC,OAAO,QAAST,EAAUU,OAAOhB,MAAMC,OAChDY,EAASE,OAAO,cAAeT,EAAUU,OAAOb,YAAYF,OAC5DY,EAASE,OAAO,UAAWT,EAAUU,OAAOZ,QAAQH,OACpDY,EAASE,OAAO,QAAST,EAAUU,OAAOX,MAAMJ,OAAO,SACjDJ,EAAY,GAAD,OACZoB,8CAAiC,YACpC,OACAJ,EACA,CACEK,cAAc,UAAD,OAAY3B,EAAK4B,SAEhC,KAAD,EAGDX,EAAQY,KAAK,KAAK,kDAElBC,QAAQC,IAAI,EAAD,IAAM,0DAEpB,gBAtBuB,sCAwBxB,OACE,oCACE,kBAAC,IAAU,CAAC1B,MAAOA,EAAO2B,QAASzB,IACnC,0BAAM0B,UAAU,aAAaC,SAAUf,GACpCf,GAAa,kBAAC,IAAc,CAAC+B,WAAS,IACvC,kBAAC,IAAK,CACJC,GAAG,QACHC,QAAQ,QACRC,KAAK,OACLC,MAAM,QACNC,WAAY,CAACC,eACbC,UAAU,8BACVC,QAAS3B,IAEX,kBAAC,IAAK,CACJoB,GAAG,cACHC,QAAQ,WACRE,MAAM,cACNC,WAAY,CAACI,YAAoB,IACjCF,UAAU,4DACVC,QAAS3B,IAEX,kBAAC,IAAK,CACJoB,GAAG,UACHC,QAAQ,QACRE,MAAM,UACNC,WAAY,CAACC,eACbC,UAAU,gCACVC,QAAS3B,IAEX,kBAAC,IAAW,CACVoB,GAAG,QACHO,QAAS3B,EACT0B,UAAU,6BAEZ,kBAAC,IAAM,CAACJ,KAAK,SAASO,UAAW9B,EAAUJ,SAAQ","file":"static/js/8.747bbfce.chunk.js","sourcesContent":["import React, { useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport Input from \"../../shared/components/FormElements/Input\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport ImageUpload from \"../../shared/components/FormElements/ImageUpload\";\r\nimport {\r\n  VALIDATOR_REQUIRE,\r\n  VALIDATOR_MINLENGTH,\r\n} from \"../../shared/util/validators\";\r\nimport { useForm } from \"../../shared/hooks/form-hook\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport \"./PlaceForm.css\";\r\n\r\nconst NewPlace = () => {\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [formState, inputHandler] = useForm(\r\n    {\r\n      title: { value: \"\", isValid: \"\" },\r\n      description: { value: \"\", isValid: \"\" },\r\n      address: { value: \"\", isValid: \"\" },\r\n      image: { value: null, isValid: false },\r\n    },\r\n    false\r\n  );\r\n\r\n  const history = useHistory();\r\n\r\n  const placeSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"title\", formState.inputs.title.value);\r\n      formData.append(\"description\", formState.inputs.description.value);\r\n      formData.append(\"address\", formState.inputs.address.value);\r\n      formData.append(\"image\", formState.inputs.image.value);\r\n      await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/places/`,\r\n        \"POST\",\r\n        formData,\r\n        {\r\n          Authorization: `Bearer ${auth.token}`,\r\n        }\r\n      );\r\n\r\n      // Redirect user to a diffrent page\r\n      history.push(\"/\");\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <form className=\"place-form\" onSubmit={placeSubmitHandler}>\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <Input\r\n          id=\"title\"\r\n          element=\"input\"\r\n          type=\"text\"\r\n          label=\"Title\"\r\n          validators={[VALIDATOR_REQUIRE()]}\r\n          errorText=\"Please enter a valid title.\"\r\n          onInput={inputHandler}\r\n        />\r\n        <Input\r\n          id=\"description\"\r\n          element=\"textarea\"\r\n          label=\"Description\"\r\n          validators={[VALIDATOR_MINLENGTH(5)]}\r\n          errorText=\"Please enter a valid description (at least 5 characters).\"\r\n          onInput={inputHandler}\r\n        />\r\n        <Input\r\n          id=\"address\"\r\n          element=\"input\"\r\n          label=\"Address\"\r\n          validators={[VALIDATOR_REQUIRE()]}\r\n          errorText=\"Please enter a valid address.\"\r\n          onInput={inputHandler}\r\n        />\r\n        <ImageUpload\r\n          id=\"image\"\r\n          onInput={inputHandler}\r\n          errorText=\"Please provide an image.\"\r\n        />\r\n        <Button type=\"submit\" disabled={!formState.isValid}>\r\n          ADD PLACE\r\n        </Button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewPlace;\r\n"],"sourceRoot":""}