{"version":3,"sources":["shared/context/auth-context.js","shared/components/UIElements/LoadingSpinner.js","shared/components/UIElements/Backdrop.js","shared/hooks/auth-hook.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","App.js","index.js"],"names":["AuthContext","createContext","isLoggedIn","userId","token","login","logout","LoadingSpinner","props","className","asOverlay","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","logoutTimer","MainHeader","children","NavLinks","auth","useContext","to","exact","SideDrawer","content","CSSTransition","in","show","timeout","classNames","mountOnEnter","unmountOnExit","MainNavigation","useState","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","Fragment","Users","React","lazy","NewPlace","UserPlaces","UpdatePlace","Auth","App","routes","setToken","tokenExpirationDate","setTokenExpirationDate","setUserId","useCallback","uid","expirationDate","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","removeItem","useEffect","remainingTime","setTimeout","clearTimeout","storeData","parse","getItem","useAuth","path","Provider","value","fallback","render"],"mappings":"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","file":"static/js/main.1a3b9108.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const AuthContext = createContext({\r\n  isLoggedIn: false,\r\n  userId: null,\r\n  token: null,\r\n  login: () => {},\r\n  logout: () => {},\r\n});\r\n","import React from 'react';\r\n\r\nimport './LoadingSpinner.css';\r\n\r\nconst LoadingSpinner = props => {\r\n  return (\r\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\r\n      <div className=\"lds-dual-ring\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingSpinner;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './Backdrop.css';\r\n\r\nconst Backdrop = props => {\r\n  return ReactDOM.createPortal(\r\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\r\n    document.getElementById('backdrop-hook')\r\n  );\r\n};\r\n\r\nexport default Backdrop;\r\n","import { useState, useCallback, useEffect } from \"react\";\r\n\r\nlet logoutTimer;\r\n\r\nexport const useAuth = () => {\r\n  const [token, setToken] = useState(null);\r\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\r\n  const [userId, setUserId] = useState(null);\r\n\r\n  const login = useCallback((uid, token, expirationDate) => {\r\n    setToken(token);\r\n    setUserId(uid);\r\n    const tokenExpirationDate =\r\n      expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\r\n    setTokenExpirationDate(tokenExpirationDate);\r\n    localStorage.setItem(\r\n      \"userData\",\r\n      JSON.stringify({\r\n        userId: uid,\r\n        token,\r\n        expiration: tokenExpirationDate.toISOString(),\r\n      })\r\n    );\r\n  }, []);\r\n  const logout = useCallback(() => {\r\n    setToken(null);\r\n    setTokenExpirationDate(null);\r\n    setUserId(null);\r\n    localStorage.removeItem(\"userData\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (token && tokenExpirationDate) {\r\n      const remainingTime =\r\n        tokenExpirationDate.getTime() - new Date().getTime();\r\n      logoutTimer = setTimeout(logout, remainingTime);\r\n    } else {\r\n      clearTimeout(logoutTimer);\r\n    }\r\n  }, [token, logout, tokenExpirationDate]);\r\n\r\n  useEffect(() => {\r\n    const storeData = JSON.parse(localStorage.getItem(\"userData\"));\r\n    if (\r\n      storeData &&\r\n      storeData.token &&\r\n      new Date(storeData.expiration) > new Date()\r\n    ) {\r\n      login(storeData.userId, storeData.token, new Date(storeData.expiration));\r\n    }\r\n  }, [login]);\r\n\r\n  return { token, login, logout, userId };\r\n};\r\n","import React from \"react\";\r\n\r\nimport \"./MainHeader.css\";\r\n\r\nconst MainHeader = (props) => {\r\n  return <header className=\"main-header\">{props.children}</header>;\r\n};\r\n\r\nexport default MainHeader;\r\n","import React, { useContext } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport { AuthContext } from \"../../context/auth-context\";\r\nimport \"./NavLinks.css\";\r\n\r\nconst NavLinks = () => {\r\n  const auth = useContext(AuthContext);\r\n\r\n  return (\r\n    <ul className=\"nav-links\">\r\n      <li>\r\n        <NavLink to=\"/\" exact={true}>\r\n          ALL USERS\r\n        </NavLink>\r\n      </li>\r\n      {auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink to={`/${auth.userId}/places`}>MY PLACES</NavLink>\r\n        </li>\r\n      )}\r\n      {auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink to=\"/places/new\">ADD PLACE</NavLink>\r\n        </li>\r\n      )}\r\n      {!auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink to=\"/auth\">AUTHENTICATE</NavLink>\r\n        </li>\r\n      )}\r\n      {auth.isLoggedIn && (\r\n        <li>\r\n          <button onClick={auth.logout}>LOGOUT</button>\r\n        </li>\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default NavLinks;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nimport \"./SideDrawer.css\";\r\n\r\nconst SideDrawer = (props) => {\r\n  const content = (\r\n    <CSSTransition\r\n      in={props.show}\r\n      timeout={200}\r\n      classNames=\"slide-in-left\"\r\n      mountOnEnter\r\n      unmountOnExit\r\n    >\r\n      <aside className=\"side-drawer\" onClick={props.onClick}>\r\n        {props.children}\r\n      </aside>\r\n    </CSSTransition>\r\n  );\r\n  return ReactDOM.createPortal(content, document.getElementById(\"drawer-hook\"));\r\n};\r\n\r\nexport default SideDrawer;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport MainHeader from \"./MainHeader\";\r\nimport NavLinks from \"./NavLinks\";\r\nimport SideDrawer from \"./SideDrawer\";\r\nimport Backdrop from \"../UIElements/Backdrop\";\r\n\r\nimport \"./MainNavigation.css\";\r\n\r\n// Link component need in Router component of App.js\r\nconst MainNavigation = () => {\r\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\r\n\r\n  const openDrawerHandler = () => {\r\n    setDrawerIsOpen(true);\r\n  };\r\n\r\n  const closeDrawerHandler = () => {\r\n    setDrawerIsOpen(false);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\r\n      <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\r\n        <nav className=\"main-navigation__drawer-nav\">\r\n          <NavLinks />\r\n        </nav>\r\n      </SideDrawer>\r\n      <MainHeader>\r\n        <button\r\n          className=\"main-navigation__menu-btn\"\r\n          onClick={openDrawerHandler}\r\n        >\r\n          <span />\r\n          <span />\r\n          <span />\r\n        </button>\r\n        <h1 className=\"main-navigation__title\">\r\n          <Link to=\"/\">YourPlaces</Link>\r\n        </h1>\r\n        <nav className=\"main-navigation__header-nav\">\r\n          <NavLinks />\r\n        </nav>\r\n      </MainHeader>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default MainNavigation;\r\n","import React, { Suspense } from \"react\";\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Redirect,\r\n  Switch,\r\n} from \"react-router-dom\";\r\n\r\n// import Users from \"./users/pages/Users\";\r\n// import NewPlace from \"./places/pages/NewPlace\";\r\n// import UserPlaces from \"./places/pages/UserPlaces\";\r\n// import UpdatePlace from \"./places/pages/UpdatePlace\";\r\n// import Auth from \"./users/pages/Auth\";\r\nimport MainNavigation from \"./shared/components/Navigation/MainNavigation\";\r\nimport { AuthContext } from \"./shared/context/auth-context\";\r\nimport { useAuth } from \"./shared/hooks/auth-hook\";\r\nimport LoadingSpinner from \"./shared/components/UIElements/LoadingSpinner\";\r\n\r\nconst Users = React.lazy(() => import(\"./users/pages/Users\"));\r\nconst NewPlace = React.lazy(() => import(\"./places/pages/NewPlace\"));\r\nconst UserPlaces = React.lazy(() => import(\"./places/pages/UserPlaces\"));\r\nconst UpdatePlace = React.lazy(() => import(\"./places/pages/UpdatePlace\"));\r\nconst Auth = React.lazy(() => import(\"./users/pages/Auth\"));\r\n\r\nfunction App() {\r\n  const { token, login, logout, userId } = useAuth();\r\n\r\n  let routes;\r\n\r\n  if (token) {\r\n    routes = (\r\n      <Switch>\r\n        <Route path=\"/\" exact={true}>\r\n          <Users />\r\n        </Route>\r\n        <Route path=\"/:userId/places\" exact>\r\n          <UserPlaces />\r\n        </Route>\r\n        <Route path=\"/places/new\" exact={true}>\r\n          <NewPlace />\r\n        </Route>\r\n        <Route path=\"/places/:placeId\">\r\n          <UpdatePlace />\r\n        </Route>\r\n        <Redirect to=\"/\" />\r\n      </Switch>\r\n    );\r\n  } else {\r\n    routes = (\r\n      <Switch>\r\n        <Route path=\"/\" exact={true}>\r\n          <Users />\r\n        </Route>\r\n        <Route path=\"/:userId/places\" exact>\r\n          <UserPlaces />\r\n        </Route>\r\n        <Route path=\"/auth\">\r\n          <Auth />\r\n        </Route>\r\n        <Redirect to=\"/auth\" />\r\n      </Switch>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{ isLoggedIn: !!token, token, userId, login, logout }}\r\n    >\r\n      <Router>\r\n        <MainNavigation />\r\n        <main>\r\n          <Suspense\r\n            fallback={\r\n              <div className=\"center\">\r\n                <LoadingSpinner />\r\n              </div>\r\n            }\r\n          >\r\n            {routes}\r\n          </Suspense>\r\n        </main>\r\n      </Router>\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// src/index.js\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}